{"ast":null,"code":"import shortid from 'shortid';\nimport Product from '../../models/Product';\nimport Cart from '../../models/Cart';\nimport Order from '../../models/Order';\nimport connectDb from '../../utils/connectDb';\nconnectDb();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case 'GET':\n      await handleGetRequest(req, res);\n      break;\n\n    case 'POST':\n      await handlePostRequest(req, res);\n      break;\n\n    case 'PUT':\n      await handlePutRequest(req, res);\n      break;\n\n    case 'DELETE':\n      await handleDeleteRequest(req, res);\n      break;\n\n    default:\n      res.status(405).send(`Method ${req.method} not allowed`);\n      break;\n  }\n});\n\nconst handler = (req, res) => {\n  if (req.method === 'OPTIONS') {\n    return res.status(200).send('ok');\n  } // handle incoming request as usual\n\n};\n\nconst handleGetRequest = async (req, res) => {\n  const {\n    id\n  } = req.query;\n  const product = await Product.findOneAndUpdate({\n    _id: id\n  }, {\n    $inc: {\n      viewCount: 1\n    }\n  });\n  const {\n    productType\n  } = product;\n  const related = await Product.find({\n    productType: productType\n  }).sort({\n    viewCount: 'desc'\n  }).limit(4);\n  res.status(200).json({\n    product,\n    related\n  });\n};\n\nconst handlePostRequest = async (req, res) => {\n  const {\n    name,\n    price,\n    description,\n    productType,\n    mediaUrl\n  } = req.body;\n  const sku = shortid.generate();\n\n  try {\n    if (!name || !price || !description || !sku || !mediaUrl) {\n      return res.status(422).send('Product missing one or more fields');\n    }\n\n    const product = await new Product({\n      name,\n      sku,\n      price,\n      description,\n      productType,\n      mediaUrl\n    }).save();\n    res.status(200).json(product);\n  } catch (error) {\n    // console.error(error)\n    res.status(500).send('Error creating product on the Server');\n  }\n};\n\nconst handlePutRequest = async (req, res) => {\n  // console.log(req.body)\n  const {\n    _id,\n    name,\n    price,\n    description,\n    productType,\n    mediaUrl\n  } = req.body;\n  await Product.updateOne({\n    _id\n  }, {\n    $set: {\n      name,\n      price,\n      description,\n      productType,\n      mediaUrl\n    },\n    $currentDate: {\n      updatedAt: true\n    }\n  }); // console.log(up)\n\n  res.status(203).send('Product Updated');\n};\n\nconst handleDeleteRequest = async (req, res) => {\n  const {\n    _id\n  } = req.query;\n\n  try {\n    await Product.findByIdAndDelete({\n      _id\n    });\n    await Cart.updateMany({\n      'products.product': _id\n    }, {\n      $pull: {\n        products: {\n          product: _id\n        }\n      }\n    });\n    await Order.updateMany({\n      'products.product': _id\n    }, {\n      $pull: {\n        products: {\n          product: _id\n        }\n      }\n    });\n    res.status(204).json({});\n  } catch (error) {\n    console.error(error);\n    res.status(500).send('Error deleting products');\n  }\n};","map":{"version":3,"sources":["C:/Users/David/Desktop/again/pages/api/product.js"],"names":["shortid","Product","Cart","Order","connectDb","req","res","method","handleGetRequest","handlePostRequest","handlePutRequest","handleDeleteRequest","status","send","handler","id","query","product","findOneAndUpdate","_id","$inc","viewCount","productType","related","find","sort","limit","json","name","price","description","mediaUrl","body","sku","generate","save","error","updateOne","$set","$currentDate","updatedAt","findByIdAndDelete","updateMany","$pull","products","console"],"mappings":"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","sourcesContent":["import shortid from 'shortid';\nimport Product from '../../models/Product';\nimport Cart from '../../models/Cart';\nimport Order from '../../models/Order';\nimport connectDb from '../../utils/connectDb';\n\nconnectDb();\n\nexport default async (req, res) => {\n  switch (req.method) {\n    case 'GET':\n      await handleGetRequest(req, res);\n      break;\n    case 'POST':\n      await handlePostRequest(req, res);\n      break;\n    case 'PUT':\n      await handlePutRequest(req, res);\n      break;\n    case 'DELETE':\n      await handleDeleteRequest(req, res);\n      break;\n    default:\n      res.status(405).send(`Method ${req.method} not allowed`);\n      break;\n  }\n};\nconst handler = (req, res) => {\n  if (req.method === 'OPTIONS') {\n    return res.status(200).send('ok');\n  }\n\n  // handle incoming request as usual\n};\n\nconst handleGetRequest = async (req, res) => {\n  const { id } = req.query;\n  const product = await Product.findOneAndUpdate(\n    { _id: id },\n    { $inc: { viewCount: 1 } }\n  );\n  const { productType } = product;\n  const related = await Product.find({\n    productType: productType,\n  })\n    .sort({ viewCount: 'desc' })\n    .limit(4);\n  res.status(200).json({ product, related });\n};\n\nconst handlePostRequest = async (req, res) => {\n  const { name, price, description, productType, mediaUrl } = req.body;\n  const sku = shortid.generate();\n  try {\n    if (!name || !price || !description || !sku || !mediaUrl) {\n      return res.status(422).send('Product missing one or more fields');\n    }\n\n    const product = await new Product({\n      name,\n      sku,\n      price,\n      description,\n      productType,\n      mediaUrl,\n    }).save();\n\n    res.status(200).json(product);\n  } catch (error) {\n    // console.error(error)\n    res.status(500).send('Error creating product on the Server');\n  }\n};\n\nconst handlePutRequest = async (req, res) => {\n  // console.log(req.body)\n  const { _id, name, price, description, productType, mediaUrl } = req.body;\n  await Product.updateOne(\n    { _id },\n    {\n      $set: { name, price, description, productType, mediaUrl },\n      $currentDate: { updatedAt: true },\n    }\n  );\n  // console.log(up)\n  res.status(203).send('Product Updated');\n};\n\nconst handleDeleteRequest = async (req, res) => {\n  const { _id } = req.query;\n  try {\n    await Product.findByIdAndDelete({ _id });\n    await Cart.updateMany(\n      { 'products.product': _id },\n      { $pull: { products: { product: _id } } }\n    );\n    await Order.updateMany(\n      { 'products.product': _id },\n      { $pull: { products: { product: _id } } }\n    );\n    res.status(204).json({});\n  } catch (error) {\n    console.error(error);\n    res.status(500).send('Error deleting products');\n  }\n};\n"]},"metadata":{},"sourceType":"module"}